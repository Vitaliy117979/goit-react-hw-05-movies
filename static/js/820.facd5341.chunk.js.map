{"version":3,"file":"static/js/820.facd5341.chunk.js","mappings":"oMACaA,EAAa,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAErBC,GAAWC,EAAAA,EAAAA,MACjB,OACE,wBACGF,EAAOG,KAAI,SAAAC,GAAK,OACf,yBACE,SAAC,KAAD,CAASC,GAAE,kBAAaD,EAAME,IAAOC,MAAQ,CAACC,KAAMP,GAApD,UACE,wBAAKG,EAAMK,WAFNL,EAAME,GADA,KAStB,C,sFCgCD,UA3CgB,WACd,OAA0BI,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAA4BL,EAAAA,EAAAA,UAAS,IAArC,eAAOV,EAAP,KAAegB,EAAf,MAEAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAcJ,EAAaK,IAAI,SAChCD,IAGLE,QAAQC,IAAIH,IACZI,EAAAA,EAAAA,IAAiBJ,GAAaK,KAAKP,GAAWQ,SAAQ,kBAC1DN,EAAYA,EAD8C,IAGvD,GAAE,CAACJ,IAeJ,OACE,4BACE,kBAAMW,SAfW,SAAAC,GACnBA,EAAIC,iBACJP,QAAQQ,IAAIF,EAAIG,QACXf,GAGLC,EAAgB,CAAEJ,MAAAA,GACnB,EAQG,WACE,qCACA,kBAAOmB,KAAK,OAAOC,KAAK,QAAQC,MAAOrB,EAAOsB,SAR/B,SAAAP,GACnBd,EAASc,EAAIG,OAAOG,MACrB,KAOK,mBAAQF,KAAK,SAAb,yBAEF,SAAC,IAAD,CAAY9B,OAAQA,MAIzB,C,+LC3CDkC,EAAAA,EAAAA,SAAAA,QAAyB,+BAClB,IAAMC,EAAU,mCAEhB,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,oGACcF,EAAAA,EAAAA,IAAU,wBAAyB,CACpDG,OAAQ,CACNC,QAASH,EACTI,KAAM,KAJL,cACCC,EADD,yBAOEA,EAAKC,KAAKC,SAPZ,kEAUA,SAAepB,EAAtB,+CAAO,OAAP,oBAAO,WAAgCX,GAAhC,8EACC6B,EAAON,EAAAA,EAAAA,IAAA,8CAC4BvB,EAD5B,+BAEX,CACE0B,OAAQ,CACNC,QAASH,EACTI,KAAM,KANP,SAUSC,EAVT,uCAUeC,KAAKC,SAVpB,kEAaA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAgCrC,GAAhC,8EACCkC,EAAON,EAAAA,EAAAA,IAAA,iBAAoB5B,EAApB,oBAA0C,CACrD+B,OAAQ,CACNC,QAASH,KAHR,SAMSK,EANT,uCAMeC,MANf,kEASA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAA6BtC,GAA7B,8EACCkC,EAAON,EAAAA,EAAAA,IAAA,iBAAoB5B,EAApB,4BAAkD,CAC7D+B,OAAQ,CACNC,QAASH,KAHR,SAMSK,EANT,uCAMeC,KAAKI,MANpB,kEAUA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAgCxC,GAAhC,8EACCkC,EAAON,EAAAA,EAAAA,IAAA,iBAAoB5B,EAApB,4BAAkD,CAC7D+B,OAAQ,CACNC,QAASH,KAHR,SAMSK,EANT,uCAMeC,KAAKC,SANpB,kE","sources":["components/MoviesList/MoviesList.js","pages/Movies/Movies.js","services/apiServices.js"],"sourcesContent":["import { NavLink,  useLocation,  } from 'react-router-dom';\nexport const MoviesList = ({ movies }) => {\n\n  const location = useLocation()\n  return (\n    <ul>\n      {movies.map(movie => (\n        <li key={movie.id}>\n          <NavLink to={`/movies/${movie.id}`}  state ={{from: location}}>\n            <h2>{movie.title}</h2>\n          </NavLink>\n        </li>\n      ))}\n    </ul>\n  );\n};\n","import { MoviesList } from 'components/MoviesList/MoviesList';\nimport { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { getMoviesByQuery } from 'services/apiServices';\n const Movies = () => {\n  const [query, setQuery] = useState('');\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [movies, setMovies] = useState([]);\n\n  useEffect(() => {\n    const searchQeary = searchParams.get('query');\n    if (!searchQeary) {\n      return;\n    }\n    console.log(searchQeary);\n    getMoviesByQuery(searchQeary).then(setMovies).finally(()=>\nsearchQeary(searchQeary)\n    );\n  }, [searchParams]);\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    console.dir(evt.target);\n    if (!searchParams) {\n      return;\n    }\n    setSearchParams({ query });\n  };\n\n  const handleChange = evt => {\n    setQuery(evt.target.value);\n  };\n\n  return (\n    <div>\n      <form onSubmit={handleSubmit}>\n        <div>Movies</div>\n        <input type=\"text\" name=\"query\" value={query} onChange={handleChange} />\n        <button type=\"submit\"> Search</button>\n      </form>\n      <MoviesList movies={movies}></MoviesList>\n       \n    </div>\n  );\n};\n\n\nexport default Movies","import axios from 'axios';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nexport const API_KEY = 'e146a7a5146c0f8a3c3cd99167c5b659';\n\nexport async function fetchTrendingMovies() {\n  const resp = await axios.get('/trending/movie/week?', {\n    params: {\n      api_key: API_KEY,\n      page: 1,\n    },\n  });\n  return resp.data.results;\n}\n\nexport async function getMoviesByQuery(query) {\n  const resp = axios.get(\n    `/search/movie?&language=en-US&query=${query}&page=1&include_adult=false`,\n    {\n      params: {\n        api_key: API_KEY,\n        page: 1,\n      },\n    }\n  );\n  return (await resp).data.results;\n}\n\nexport async function getMoviesDetails(id) {\n  const resp = axios.get(`/movie/${id}?&language=en-US`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return (await resp).data;\n}\n\nexport async function getMoviesCast(id) {\n  const resp = axios.get(`/movie/${id}/credits?&language=en-US`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return (await resp).data.cast;\n}\n\n\nexport async function getMoviesReviews(id) {\n  const resp = axios.get(`/movie/${id}/reviews?&language=en-US`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return (await resp).data.results;\n}\n"],"names":["MoviesList","movies","location","useLocation","map","movie","to","id","state","from","title","useState","query","setQuery","useSearchParams","searchParams","setSearchParams","setMovies","useEffect","searchQeary","get","console","log","getMoviesByQuery","then","finally","onSubmit","evt","preventDefault","dir","target","type","name","value","onChange","axios","API_KEY","fetchTrendingMovies","params","api_key","page","resp","data","results","getMoviesDetails","getMoviesCast","cast","getMoviesReviews"],"sourceRoot":""}